# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # Setup R using r-lib/actions/setup-r
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          
      # Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev pandoc pandoc-citeproc
          sudo apt-get install -y libfontconfig1-dev libfreetype6-dev
          echo 'options(repos = c(CRAN = "https://cloud.r-project.org"))' > ~/.Rprofile
      
      # Install R packages
      - name: Install R packages
        run: |
          install.packages(c("remotes", "pkgdown"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      
      # Build pkgdown site
      - name: Build site
        run: |
          if (file.exists("man/figures/logo.png")) {
            pkgdown::build_favicons(overwrite = TRUE)
          }
          pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)
          touch docs/.nojekyll
        shell: Rscript {0}
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
