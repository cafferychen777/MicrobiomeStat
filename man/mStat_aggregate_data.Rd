% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mStat_aggregate_data.R
\name{mStat_aggregate_data}
\alias{mStat_aggregate_data}
\title{Aggregate Data Function}
\usage{
mStat_aggregate_data(
  data.obj,
  subject.var,
  strata.var = NULL,
  meta.handle.conflict = c("first", "stop", "summarise")
)
}
\arguments{
\item{data.obj}{A list object in a format specific to MicrobiomeStat...}

\item{subject.var}{A character specifying the name of the subject variable.}

\item{strata.var}{A character specifying the name of the strata variable. If NULL, no stratification is performed.}

\item{meta.handle.conflict}{A character string specifying how to handle conflicting metadata in replicates.
Options are:
- `"first"` (default): Use the metadata from the first record encountered for each group. Issues a warning about conflicts.
- `"stop"`: Stop execution with an error if any metadata conflict is found.
- `"summarise"`: For numeric variables, compute the mean. For non-numeric (character/factor) variables, if they are inconsistent, stop with an error. Issues a warning for summarized numeric variables.}
}
\value{
A new list object with aggregated data.
}
\description{
This function aggregates data by a specified subject and optional strata.
It provides flexible strategies for handling metadata conflicts in replicates.
}
\examples{
\dontrun{
# Prepare data for the function
data(peerj32.obj)

# Call the function with the default subject variable "subject"
aggregated_data <- mStat_aggregate_data(
  data.obj = peerj32.obj,
  subject.var = "subject",
  strata.var = NULL
)

# Example with a different subject variable name
# Let's pretend the subject ID column is called "participant"
# peerj32.obj$meta.dat$participant <- peerj32.obj$meta.dat$subject
# aggregated_data_2 <- mStat_aggregate_data(
#   data.obj = peerj32.obj,
#   subject.var = "participant",
#   strata.var = "group"
# )
}
}
