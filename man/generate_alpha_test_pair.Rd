% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_alpha_test_pair.R
\name{generate_alpha_test_pair}
\alias{generate_alpha_test_pair}
\title{Alpha Diversity Association Test}
\usage{
generate_alpha_test_pair(
  data.obj,
  alpha.obj = NULL,
  alpha.name = NULL,
  depth = NULL,
  time.var,
  subject.var,
  group.var,
  adj.vars = NULL,
  change.base = NULL
)
}
\arguments{
\item{data.obj}{A list object in a format specific to MicrobiomeStat, which can include components such as feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, and feature.agg.list (list). The data.obj can be converted from other formats using several functions from the MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', and 'mStat_import_biom_as_data_obj'. Alternatively, users can construct their own data.obj. Note that not all components of data.obj may be required for all functions in the MicrobiomeStat package.}

\item{alpha.obj}{An optional list containing pre-calculated alpha diversity indices. If NULL (default), alpha diversity indices will be calculated using mStat_calculate_alpha_diversity function from MicrobiomeStat package.}

\item{alpha.name}{A character vector with the names of alpha diversity
indices to compute. Options include: "shannon", "simpson",
"observed_species", "chao1", "ace", "pielou", and "faith_pd".}

\item{depth}{An integer specifying the sequencing depth for the "Rarefy" and "Rarefy-TSS" methods.
If NULL, no rarefaction is performed.}

\item{time.var}{A string representing the time variable's name in the
metadata. The default is NULL.}

\item{subject.var}{A string specifying the subject variable column in the metadata.}

\item{group.var}{A string representing the group variable's name in the
metadata.}

\item{adj.vars}{A character vector with the names of adjustment variables in
the metadata.}

\item{change.base}{A value indicating the base level for the time variable.
If provided, the specified level will be used as the reference category in
the model. Default is NULL, which means the first level of the factor will
be used.}
}
\value{
A list containing the association tests for each alpha diversity
index.
}
\description{
This function implements an association test for multiple alpha diversity
measures. The test is based on a mixed-effects model fitted by the `lmer`
function from the `lmerTest` package. The function accepts a data object as
input and returns a list of tests, one for each alpha diversity index.
}
\details{
The mixed-effects model includes the time variable, group variable, and any
additional adjustment variables as fixed effects, and the subject variable as
a random effect.

The output is a list of coefficient tables, one for each alpha diversity
index. Each table includes the term, estimate, standard error, t value, and
p-value for each fixed effect in the model.
}
\examples{
data(peerj32.obj)
generate_alpha_test_pair(
data.obj = peerj32.obj,
alpha.obj = NULL,
time.var = "time",
alpha.name = c("shannon", "simpson", "ace"),
subject.var = "subject",
group.var = NULL
)

generate_alpha_test_pair(
data.obj = peerj32.obj,
alpha.obj = NULL,
time.var = "time",
alpha.name = c("shannon", "simpson", "ace"),
subject.var = "subject",
group.var = NULL,
change.base = "2"
)

generate_alpha_test_pair(
data.obj = peerj32.obj,
alpha.obj = NULL,
time.var = "time",
alpha.name = c("shannon", "simpson", "ace"),
subject.var = "subject",
group.var = "group"
)

generate_alpha_test_pair(
data.obj = peerj32.obj,
alpha.obj = NULL,
time.var = "time",
alpha.name = c("shannon", "simpson", "ace"),
subject.var = "subject",
group.var = "group",
adj.vars = "sex"
)

data("subset_pairs.obj")
generate_alpha_test_pair(
data.obj = subset_pairs.obj,
alpha.obj = NULL,
time.var = "Antibiotic",
alpha.name = c("shannon", "simpson", "ace"),
subject.var = "MouseID",
group.var = "Sex"
)
generate_alpha_test_pair(
data.obj = subset_pairs.obj,
alpha.obj = NULL,
time.var = "Antibiotic",
alpha.name = c("shannon", "simpson", "ace"),
subject.var = "MouseID",
group.var = "Sex",
change.base = "Week 2"
)
}
